ext {
    bintrayPackage = 'serenity-model'
    projectDescription = 'Serenity Model'
}

dependencies {

    compile project(':serenity-report-resources')

    compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
    compile group: 'commons-net', name: 'commons-net', version: '3.6'

    compile "com.typesafe:config:${typesafeConfigVersion}"

    compile("org.jsoup:jsoup:${jsoupVersion}") {
        exclude group: 'junit', module: 'junit'
    }

    compile "joda-time:joda-time:${jodaTimeVersion}"
    compile "commons-collections:commons-collections:${commonsCollectionsVersion}"
    compile "commons-io:commons-io:${commonsIoVersion}"
    compile("org.apache.commons:commons-text:${commonsTextVersion}") {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    }
    compile("commons-beanutils:commons-beanutils-core:${beanUtilsVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-collections', module: 'commons-collections'
    }
//    compile "javax.validation:validation-api:${javaxValidationVersion}"
    compile "net.sf.opencsv:opencsv:${openCsvVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"
    compile "org.imgscalr:imgscalr-lib:${imgscalrVersion}"
    compile "com.thoughtworks.xstream:xstream:${xstreamVersion}"
    compile "org.codehaus.groovy:groovy:${groovyVersion}"
    compile("net.sourceforge.jexcelapi:jxl:${jexcelapiVersion}") {
        exclude group: 'log4j', module: 'log4j'
    }

    compile("org.awaitility:awaitility:${awaitilityVersion}") {
        exclude group: 'cglib', module: 'cglib-nodep'
//        exclude group: 'org.objenesis', module: 'objenesis'
    }
    compile ('org.reflections:reflections:0.9.11') {
        exclude group:"com.google.guava"
    }

    testCompile ("com.github.tomakehurst:wiremock:$wiremockCoreVersion") {
        exclude group: 'com.google.guava', module:'guava'
        exclude group: 'org.apache.httpcomponents', module:'httpclient'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    compile("org.asciidoctor:asciidoctorj:${asciidoctorVersion}"){
        exclude group: 'com.beust', module: 'jcommander'
    }
    compile "org.freemarker:freemarker:${freemarkerVersion}"


    compile ("com.vladsch.flexmark:flexmark-all:0.34.30") {
        exclude group:"org.jsoup", module:"jsoup"
        exclude group:"junit", module:"junit"
    }
    compile "junit:junit:${junitVersion}"
    compile 'es.nitaur.markdown:txtmark:0.16'

    compileOnly "org.junit.jupiter:junit-jupiter-api:${junit5Version}"

    testCompile project(':serenity-test-utils')
    testCompile project(':serenity-sample-alternative-resources')
    testCompile("org.spockframework:spock-core:${spockVersion}") {
        exclude group: "junit"
        exclude group: "org.codehaus.groovy"
        exclude group: "org.junit.platform"
    }
    testCompile "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
}
